services:
  # api:
  #   build: ./api
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - rabbitmq
  #     - minio

  # ocr-worker:
  #   build: ./ocr-worker
  #   depends_on:
  #     - rabbitmq
  #     - minio

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-colados
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    networks:
      - colados-network
    volumes:
      - "./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro"
      - "./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro"

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio-colados
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_DEFAULT_BUCKETS: images
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001" # Console UI
    volumes:
      - minio_data:/data
    networks:
      - colados-network

  mongodb:
    image: mongo:8.0.15-noble
    container_name: mongodb-colados
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - ${MONGODB_PORT}:27017
    # volumes:
    #   - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - colados-network

  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: mongo-express-colados
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
      ME_CONFIG_MONGODB_PORT: ${MONGODB_PORT}
    ports:
      - ${ME_CONFIG_MONGODB_PORT}:8081
    networks:
      - colados-network

  postgres:
    image: postgres:18.0-alpine3.22
    container_name: postgres-colados
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - colados-network

volumes:
  minio_data:
  pgdata:

networks:
  colados-network:
    driver: bridge
